//@import "~font-awesome/css/font-awesome.css";

@import "~react-table/react-table.css";

@import "~react-tabs/style/react-tabs.scss";

$select-input-height: 28px;
@import "~react-select/scss/default";

//$region-selected-color: #CFF09F; //this is too light
// this is an overlay, not a true background, so it has to use transparency, which makes it
// impossible to mimic saymore's selected cell background color.
// Alas, the transparancy get's discarded and replaced by 0.1. So I've increased the saturation
//$region-selected-color: rgba(151, 255, 0, 0.2);
// $header-background-color:#CFF09F; (samore green) interesting, but it was too much
$header-background-color: white;
$project--color: #e69664;
$people--color: #becde4; // saymore was #c7cfdb;
$session--color: #cff09f;
$pane__interstitial--color: #f0f0f0;
$pane__border--color: #abadb3;
$session__outline--color: #94c397;
$people__outline--color: #7092be;
$project__outline--color: #b64906;
$session__cellOverlay--color: rgba(151, 255, 0, 0.2);
$people__cellOverlay--color: rgba(199, 207, 219, 0.2);
$project__cellOverlay--color: rgba(230, 150, 100, 0.2);

$icon-font-path: "~@blueprintjs/core/resources/icons";
@import "~@blueprintjs/core/src/blueprint.scss";
@import "~@blueprintjs/table/src/table.scss";
@import "~@blueprintjs/datetime/src/blueprint-datetime.scss";
@import "~react-datepicker/dist/react-datepicker.css";

.people {
  .not-implemented {
    color: #becde4;
  }
  .bp-table-selection-region {
    background-color: $people__cellOverlay--color;
    border-color: $people__outline--color;
  }
  .folderList {
    border: solid 1px $people__outline--color;
  }
  .fileList {
    border: solid 1px $people__outline--color;
  }
  .react-tabs__tab-list {
    border-bottom: solid 1px $people__outline--color;
    .react-tabs__tab--selected {
      border-color: $people__outline--color;
    }
  }
}
.tab-project.react-tabs__tab--selected {
  background-color: $project--color;
}
.tab-sessions.react-tabs__tab--selected {
  background-color: $session--color;
}
.tab-people.react-tabs__tab--selected {
  background-color: $people--color;
}
.sessions {
  .bp-table-selection-region {
    background-color: $session__cellOverlay--color;
    border-color: $session__outline--color;
  }
  .folderList {
    //border: solid 4px $session--color;
  }
}
.project {
  .bp-table-selection-region {
    background-color: $project__cellOverlay--color;
    border-color: $project__outline--color;
  }
}

$color-interstitial: #f0f0f0;
* {
  box-sizing: border-box;
}
body,
html,
#root,
#app {
  height: 100%;
  margin: 0;
  background-color: $color-interstitial;
  color: black; //blueprint messes with this
}
a {
  text-decoration: underline;
}
.field {
  // display: flex;
  // flex-direction: column;
  // width: 100%;

  //width: 30%;
  margin-top: 4px;
  margin-bottom: 4px;
  //margin-right: 8px;
}

.field:not(.text-block) {
  //height: 40px;
}
label {
  display: block;
  font-size: 12px;
  font-weight: bold;
}

.text-block textarea {
  height: 6em;
}
textarea {
  border-style: inset;
  resize: none;
  height: 2em;
  width: 100%; //just fill the container
  font-family: "segoe ui", "sans";
}
.Select {
  //need to narrow the selector down
  //width: 300px;
}
form {
  height: 100%;
  background-color: transparent; // $color-session;
  overflow: auto;
  //border: solid thin $color-session-outline;
  margin: 8px;
  // display: grid;
  // grid-template-columns: 1fr 1fr;
  // grid-gap: 8px;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  flex-wrap: wrap;
  justify-content: flex-start; // stack from top on all columns
  // margin: 0 -8px;

  .fill-form {
    display: flex;
    flex-direction: column;
    flex-grow: 1;

    textarea {
      flex-grow: 1;
    }
  }
}
// .react-tabs__tab svg{

// }

.projectx .primary ul {
  //display: block;
}
.componentTab {
  color: $session--color;

  .firstColumn {
    display: flex;
    flex-direction: column;
    width: 100%;
    .folderList {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      background-color: white;

      .bp-table-container {
        flex-grow: 1; // take up all the vertical space except what newFolderBar needs
        // library code puts in 100%, which makes it take more space than the parent since it has a sybling
        height: inherit;
        background-color: inherit;
      }
    }

    .newFolderBar {
      padding-top: 8px;
      width: 100%;
      height: 50px;
      //border: solid blue;
    }
  }
}
.peopleTab {
  color: $people--color;
}

.react-tabs {
  height: 100%;
  background-color: white;
}
.home {
  overflow: auto; // if scroll bars show, something is wrong, this is should size to the window
  height: 100%;

  .tab-panel-project {
    background-color: $project--color;
  }
  .tab-panel-sessions {
    background-color: $session--color;
  }
  .tab-panel-people {
    background-color: $people--color;
  }
  & > .react-tabs__tab-panel--selected {
    padding: 8px;
    // background-color: $people-color;
    height: 100%;

    //border: solid pink;
    display: flex;
    // flex-grow: 1;
    flex-direction: column;
  }

  //border: solid green;
  display: flex;
  flex-direction: column;
}

.sessions .react-tabs__tab-panel {
  background-color: $session--color;
  //border: solid thin $session__outline--color;
}
.people .react-tabs__tab-panel {
  background-color: $people--color;
  //border: solid thin $people__outline--color;
}
.project .react-tabs__tab-panel {
  background-color: $project--color;
  //border: solid thin $project__outline--color;
  padding: 10px;
  height: 100%; // unlike other tabs, this has tabs on left so can be taller
}
.sessions {
  background-color: $session--color;
  .react-tabs {
    background-color: $session--color;
  }
  .react-tabs__tab-list {
    background-color: $session--color;
  }
}
.people {
  background-color: $people--color;
  .react-tabs__tab-list {
    background-color: $people--color;
  }
}
.bp-table-quadrant {
  background-color: white;
}
.project {
  //background-color: #F0F0F0;
  height: 100%;
  color: black;
  display: flex; // put the tabs on the left

  //left side
  & > ul {
    width: 200px;

    //   // turn off the tab look
    .react-tabs__tab {
      border: none;
      border-radius: initial;
      width: 100%;
      // &:hover,
      // &.react-tabs__tab--selected {
      //   //background-color: $project__cellOverlay--color;
      //   font-weight: bold;
      // }
    }
  }
  .react-tabs__tab-list {
    background-color: white;
    width: 200px;
  }
  //right side
  .react-tabs__tab-panel {
    width: 100%;
  }

  .primary {
    display: block; // just v-scroll if we don't have room
  }
  .primary,
  .accessProtocol {
    .field {
      display: flex; // enables the following rule...
      align-items: center; // which aligns labels and inputs
      height: initial;

      &.field__newSection {
        margin-top: 2em;
      }
      label {
        text-align: right;
        width: 150px;
        margin-right: 1em;
      }

      textarea {
        width: 400px;
      }
    }
  }
}
.componentTab {
  //background-color: #F0F0F0;
  height: 100%;
  color: black;
  display: flex;
}
.fileDetails {
  background-color: $pane__interstitial--color;
  border: solid thin $pane__border--color;
}

.sessionsList {
  height: 100%;
  background-color: white;
  width: 300px;
  color: black;
  border: solid thin $pane__border--color;
  margin-right: 6px;
}

.fileList {
  background-color: white;
  width: 100%;
  position: relative; // needed by mask
  display: flex;
  flex-direction: column;
  .bp-table-container {
    // library code puts in 100%, which makes it take more space than the parent since it has a sybling
    height: inherit;
    flex-grow: 1;
    background-color: inherit;
  }
  button {
    background-color: inherit;
    border-color: transparent;
    border-width: 1px;
    &:hover {
      border-color: $people__outline--color;
    }
  }
}
.paneTitle {
  display: none;
  // font-size: 19px;
  // margin-top: 6px;
  // margin-left: 6px;
  // margin-bottom: 6px;
}
.project-documents .fileList {
  min-height: 150px;
}

.filePane {
  display: flex;
  flex-direction: column;
  width: 100%;
  border: none;
  .react-tabs {
    //background-color: yellow !important; //shouldn't see this
    display: flex;
    flex-direction: column;
    width: 100%;
  }
  .react-tabs__tab-panel--selected {
    flex-grow: 1;

    display: flex;
    flex-direction: column;
  }
}

.textView {
  background-color: white;
  height: 100%;
  padding: 1em;
}

.project .filePane {
  .react-tabs__tab-panel {
    padding-left: 1px;
    padding-top: 0px;
    padding-right: 0;
  }
  .react-tabs__tab-list {
    background-color: $project--color;
  }
}
//make react-select style fit what we're doing with textarea
.Select .Select-control {
  border-style: inset;
  border-radius: 0px;
}
.Select-value-label {
  color: black !important; //react-select makes it some kind of almost-black
}

.field.access-protocol {
  display: flex;
  label {
    width: 120px;
    margin-right: 10px;
  }
  .protocol-documentation {
    margin-top: 10px;
    max-width: 600px;
    h1 {
      font-size: 16px;
      font-weight: 700;
      margin-top: 1em;
    }
  }
}

.personForm {
  //display: grid;
  //grid-auto-flow: column;
  //grid-template-rows: repeat(4, 54px);
  display: flex;
  flex-direction: row;
  .first-column {
    margin-right: 10px;
    .field {
      width: calc(100% - 50px); // leave room for mom & dad icons
    }
  }

  .language {
    margin-top: 0;
    margin-bottom: 0;
    display: flex;
    justify-content: space-between;
    .field {
      margin-top: 0;
      margin-bottom: 0;
    }
    .language-name {
      width: 100px;
      flex-grow: 1;
      margin-right: 8px;
      textarea {
        width: 100%; //just fill container
      }
    }
    .state.on {
      background-color: $people__outline--color;
    }
  }
  .nickname-and-code {
    width: calc(100% - 50px); // leave room for mom & dad icons
    display: flex;
    justify-content: space-between;
    .field {
      width: 45%;

      textarea {
        width: 100%;
      }
    }
  }
  .upper-right-cluster {
    // grid-row-start: 1;
    // grid-row-end: 7;

    display: flex;
    height: 160px;
    flex-wrap: wrap;
    flex-direction: column;
    width: 300px;
    position: relative; // allow image to be absolute

    .birth,
    .gender {
      width: 80px;
      textarea {
        width: 60px;
      }
    }

    .mugshot {
      position: absolute;
      right: 0;
      margin-right: 0;

      img {
        object-fit: contain;
        object-position: right top;
        height: 160px;
        width: 160px;
      }
    }
  }
}
.fileBar {
  //background-color: $pane__interstitial--color;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding-left: 10px;
  padding-right: 10px;
  margin-bottom: 0;
  padding-top: 5px;
  font-size: 12px;
  li {
    list-style: none;
  }
  .menu {
    li {
      display: none;
    }
  }
}

.icon-and-label {
  display: flex;
  align-items: center;

  img {
    height: 24px;
    margin-right: 8px;
  }
}
.react-tabs__tab:hover,
.react-tabs__tab--selected {
  font-weight: bold;
}

.mask {
  display: none;
}
.drop-active {
  .mask {
    text-align: center;
    font-size: 36px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: gray; // text color

    z-index: 5000;
    //border: dashed 8px lightgray;
    background-color: rgba(256, 256, 256, 0.8);

    position: absolute; // NB: parent must be position: relative
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;

    // make the dashed border inset
    &:before {
      content: "foo"; /* we need something or it will be invisible */
      color: transparent;
      position: absolute;
      left: 10px;
      right: 10px;
      top: 10px;
      bottom: 10px;
      border: 4px dashed lightgray;
    }
  }
}

// enhance: this is for when you click on a photo in the list... should be more defined
img {
  width: 100%;
}

.Resizer.horizontal {
  height: 11px;
  cursor: row-resize;
  width: 100%;
}

.Resizer.vertical {
  width: 10px;
  // margin: 0 -5px;
  // border-left: 5px solid rgba(255, 255, 255, 0);
  // border-right: 5px solid rgba(255, 255, 255, 0);
  cursor: col-resize;
}

.Resizer:hover {
  background-color: gray;
}
.Resizer {
  flex-shrink: 0;
  //background: #000;
  opacity: 0.4;
  z-index: 1;
  // -moz-box-sizing: border-box;
  // -webkit-box-sizing: border-box;
  box-sizing: border-box;
  // -moz-background-clip: padding;
  // -webkit-background-clip: padding;
  background-clip: padding-box;
}

.Resizer:hover {
  //transition: all 2s ease;
}
.SplitPane {
  //padding: 8px;
  position: relative !important; //by default it was absolute, which messed up auto sizing
  .Pane {
    display: flex;
  }
}
.not-implemented {
  color: lightgray;
}

.ReactModal__Content.createProject {
  position: absolute;
  border: 3px solid $project--color;
  background: white;
  overflow: auto;
  border-radius: 4px;
  outline: none;

  left: 50%;
  right: auto;
  transform: translate(-50%, -50%);
  bottom: auto;
  top: 50%;

  .dialogTitle {
    padding: 10px;
  }
  .dialogContent {
    background-color: #f0f0f0;
    padding: 20px;
    display: flex;
    flex-direction: column;
    h1 {
      font-size: 12px;
      height: 1em;
      font-weight: bold;
      margin: 0;
    }
    p.message {
      font-size: 12px;
      height: 1em;

      &.error {
        color: red;
      }
    }
    input {
      width: 326px; // this efectively controls the width of the whole dialog
      height: 2em;
      font-size: 12px;
      margin-top: 11px; // In Windows, this must be odd else the top line is invisible. I kid you not.
    }
    .buttonRow {
      align-self: flex-end;
      float: right;
      margin-top: 2em;
      button {
        width: auto;
        min-width: 100px;
        margin-left: 10px;
      }
      button:disabled {
        color: lightgray;
        border-color: lightgray;
        border-style: solid;
        border-width: 1px;
      }
    }
  }
}

.ReactTable {
  background-color: white;
  .rt-td {
    overflow: unset; //allow comboboxes to draw list outside cell
  }
  .Select-control {
    border: none;
  }
  .Select-arrow,
  .Select-placeholder {
    visibility: hidden;
  }
  .rt-td:hover .Select-arrow {
    visibility: visible;
  }
  input {
    border: none;
    width: 100%; //fit within the column width
  }
  textarea {
    overflow: hidden;
    //white-space: nowrap;
    height: auto; //go ahead and grow the row to show all the text
    border: none;
  }
}
